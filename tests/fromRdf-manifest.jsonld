{
  "@context": ["context.jsonld", {"@base": "fromRdf-manifest"}],
  "@id": "",
  "@type": "mf:Manifest",
  "name": "Transform RDF to JSON-LD",
  "description": "These tests implement the requirements for the JSON-LD-star [Serialize RDF as JSON-LD Algorithm](https://json-ld.github.io/json-ld-star#serialize-rdf-as-json-ld-algorithm).",
  "baseIri": "https://w3c.github.io/json-ld-api/tests/",
  "sequence": [
    {
      "@id": "#tst04",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "triple term 1",
      "purpose": "Node with triple term having no @id",
      "input": "fromRdf/st04-in.nq",
      "expect": "fromRdf/st04-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst05",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "triple term 2",
      "purpose": "Node with triple term having IRI @id",
      "input": "fromRdf/st05-in.nq",
      "expect": "fromRdf/st05-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst06",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "triple term 3",
      "purpose": "Node with triple term having BNode @id",
      "input": "fromRdf/st06-in.nq",
      "expect": "fromRdf/st06-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst07",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "triple term 4",
      "purpose": "Node with triple term having a type",
      "input": "fromRdf/st07-in.nq",
      "expect": "fromRdf/st07-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst08",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "triple term 5",
      "purpose": "Node with triple term having an IRI value",
      "input": "fromRdf/st08-in.nq",
      "expect": "fromRdf/st08-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst09",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "triple term 6",
      "purpose": "Node with triple term having an BNode value",
      "input": "fromRdf/st09-in.nq",
      "expect": "fromRdf/st09-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst10",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "triple term 7",
      "purpose": "Node with recursive triple term",
      "input": "fromRdf/st10-in.nq",
      "expect": "fromRdf/st10-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst15",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "reification 8",
      "purpose": "Node with reified triple",
      "input": "fromRdf/st15-in.nq",
      "expect": "fromRdf/st15-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst16",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "reification 9",
      "purpose": "Node with reified triple having properties",
      "input": "fromRdf/st16-in.nq",
      "expect": "fromRdf/st16-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst17",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "reification 10",
      "purpose": "Node with recursive reification",
      "input": "fromRdf/st17-in.nq",
      "expect": "fromRdf/st17-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst18",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Annotation node 1 (with @annotation)",
      "purpose": "Node with @annotation property on value object",
      "input": "fromRdf/st18-in.nq",
      "expect": "fromRdf/st18-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst19",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Annotation node 2 (with @annotation)",
      "purpose": "Node with @annotation property on node object",
      "input": "fromRdf/st19-in.nq",
      "expect": "fromRdf/st19-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst20",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Annotation node 3 (with @annotation)",
      "purpose": "Node with @annotation property multiple values",
      "input": "fromRdf/st20-in.nq",
      "expect": "fromRdf/st20-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst20a",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Annotation node 4 (with @annotation)",
      "purpose": "Node with @annotation property containing multiple properties",
      "input": "fromRdf/st20a-in.nq",
      "expect": "fromRdf/st20a-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst28",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Embedded annotation node 1 (with @annotation)",
      "purpose": "Node with @annotation property on embedded subject",
      "input": "fromRdf/st28-in.nq",
      "expect": "fromRdf/st28-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst29",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Embedded annotation node 2 (with @annotation)",
      "purpose": "Node with @annotation property on embedded object",
      "input": "fromRdf/st29-in.nq",
      "expect": "fromRdf/st29-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst33",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "reification 14",
      "purpose": "Reification used as object in reverse relationship",
      "input": "fromRdf/st33-in.nq",
      "expect": "fromRdf/st33-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst34",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Reverse annotation node 1 (with @annotation)",
      "purpose": "node with @annotation property on node object with reverse relationship",
      "input": "fromRdf/st34-in.nq",
      "expect": "fromRdf/st34-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst35",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Reverse annotation node 2 (with @annotation)",
      "purpose": "reverse relationship inside annotation",
      "input": "fromRdf/st35-in.nq",
      "expect": "fromRdf/st35-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst36",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Alias for embedded node",
      "purpose": "embedded node with an alias of `@id`",
      "input": "fromRdf/st36-in.nq",
      "expect": "fromRdf/st36-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst37",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "Alias for annotation node (with @annotation)",
      "purpose": "annotation node with an alias of `@annotation`",
      "input": "fromRdf/st37-in.nq",
      "expect": "fromRdf/st37-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst38",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "annotation value 1 (with @annotation)",
      "purpose": "embedded node with annotation on value object",
      "input": "fromRdf/st38-in.nq",
      "expect": "fromRdf/st38-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst39",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "annotation with embedded node 1 (with @annotation)",
      "purpose": "annotation node containing an embedded node",
      "input": "fromRdf/st39-in.nq",
      "expect": "fromRdf/st39-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }, {
      "@id": "#tst40",
      "@type": ["jld:PositiveEvaluationTest", "jld:FromRDFTest"],
      "name": "annotation with annotation 1 (with @annotation)",
      "purpose": "annotation node containing an annotation node",
      "input": "fromRdf/st40-in.nq",
      "expect": "fromRdf/st40-out.jsonld",
      "requires": "JSON-LD-star",
      "option": {"specVersion": "json-ld-star", "rdfstar": true}
    }
  ]
}
